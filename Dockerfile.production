# Production Dockerfile for Figure Collector Frontend
# Multi-stage build for optimized React application

# Stage 1: Build
# Note: Base image runs as root during build (required for compilation)
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
# Using --ignore-scripts for security to prevent execution of npm scripts
RUN npm ci --ignore-scripts

# Copy source code
COPY . .

# Build React app
# Default to /api (nginx proxy) - override for direct backend access
ARG REACT_APP_API_URL=/api
ENV REACT_APP_API_URL=${REACT_APP_API_URL}
RUN npm run build

# Stage 2: Production with nginx
FROM nginx:alpine AS production

# Build arguments for customization
ARG GITHUB_ORG=rpgoldberg
ARG GITHUB_REPO=figure-collector-frontend

# Add labels
LABEL org.opencontainers.image.title="Figure Collector Frontend"
LABEL org.opencontainers.image.description="React frontend for Figure Collector"
LABEL org.opencontainers.image.vendor="Figure Collector Services"
LABEL org.opencontainers.image.source="https://github.com/${GITHUB_ORG}/${GITHUB_REPO}"

# Install curl and gettext (for envsubst) for template processing
RUN apk add --no-cache curl gettext

# Copy nginx template (will be processed to /etc/nginx/conf.d/default.conf)
COPY nginx/default.conf.template /etc/nginx/templates/default.conf.template

# Note: Fallback nginx config will be handled by the entrypoint script if needed

# Copy built React app from builder
# Static files are owned by root:root (read-only)
COPY --from=builder --chown=root:root /app/build /usr/share/nginx/html

# Set appropriate permissions for nginx
# Static files remain read-only, only cache/log directories are writable
RUN chmod -R 644 /usr/share/nginx/html && \
    find /usr/share/nginx/html -type d -exec chmod 755 {} \; && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid && \
    mkdir -p /etc/nginx/templates && \
    chown nginx:nginx /etc/nginx

# Environment variables - MUST be set at runtime
# Production: BACKEND_HOST=backend BACKEND_PORT=5050 FRONTEND_PORT=5051
# Development: BACKEND_HOST=backend-dev BACKEND_PORT=5070 FRONTEND_PORT=5071
# Test: BACKEND_HOST=backend-test BACKEND_PORT=5055 FRONTEND_PORT=5056

# Stay as root for template processing, nginx will drop privileges
USER root

EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/health || exit 1

# Use default nginx entrypoint which processes templates automatically
CMD ["nginx", "-g", "daemon off;"]