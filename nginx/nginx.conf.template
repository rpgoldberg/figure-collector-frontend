# Use variables for dynamic resolution instead of upstream block
# This prevents startup failures when backend is not immediately available


server {
    listen ${FRONTEND_PORT};
    server_name _;
    
    # Enable DNS resolver for dynamic backend resolution
    resolver 127.0.0.11 valid=30s;
    set $backend_host ${BACKEND_HOST};
    set $backend_port ${BACKEND_PORT};
    root /usr/share/nginx/html;
    index index.html;
    
    access_log off;
    
    # Cache bust for HTML files - always fetch latest
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        try_files $uri $uri/ /index.html;
    }

    # Long cache for assets with hashes - safe to cache forever
    location ~* \.(js|css|woff|woff2|ttf|svg|ico|png|jpg|jpeg|gif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Default location for everything else
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Frontend health endpoint
    location /health {
        add_header Content-Type application/json;
        return 200 '{"status":"healthy","service":"figure-collector-frontend","timestamp":"2025-08-09T00:00:00.000Z"}';
    }


    # Proxy /version to backend for aggregated version info
    location /version {
        proxy_pass http://$backend_host:$backend_port/version;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Proxy /register-service to backend for service registration
    location /register-service {
        proxy_pass http://$backend_host:$backend_port/register-service;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        proxy_pass http://$backend_host:$backend_port/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}